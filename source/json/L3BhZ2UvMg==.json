{"pathKey":"/page/2","page":{"posts":[{"id":"year-end-summary-2019","excerpt":"<p>距离 2019 结束只有不到三天，好好写完这份总结应该是今年最后一件事了。</p>","title":"我的 2019","comments":true,"link":"","path":"/post/year-end-summary-2019"},{"id":"compile-vue-file-to-js-file","excerpt":"<p>在开发 Vue 的组件库时，该如何将 <code>vue</code> 文件转换为 <code>commonjs</code> 或是 <code>ES Module</code> 规范的 <code>js</code> 文件，最后提供给他方使用？</p>\n<p>在这样的场景下，展开标题内容的研究与实践。</p>","title":"编译 Vue 单文件组件至 JS 文件","comments":true,"link":"","path":"/post/compile-vue-file-to-js-file"},{"id":"some-web-debugging-skills","excerpt":"<p>记录那些年，我们都在用的调试方法。第一部分主要是一些 Chrome 开发者工具的使用记录；剩余部分是一些其他的调试手段，包括移动端调试、代理内容的介绍。了解 Chrome 开发者的同学，可以跳过第一部分。</p>\n<img src=\"/2019-11-03/some-web-debugging-skills/chrome-chan.jpg\" width=\"260\">","title":"也许有用的 Web 调试技能","comments":true,"link":"","path":"/post/some-web-debugging-skills"},{"id":"typescript-types-of-nested-array-and-deep-partial","excerpt":"<h1 id=\"嵌套数组类型\"><a href=\"#嵌套数组类型\" class=\"headerlink\" title=\"嵌套数组类型\"></a>嵌套数组类型</h1><p>以下类型可用于描述嵌套的数组类型。</p>","title":"TypeScript 之嵌套数组与深度可选类型","comments":true,"link":"","path":"/post/typescript-types-of-nested-array-and-deep-partial"},{"id":"troubles-with-web-developing-in-weixin","excerpt":"<p>如标题所示，本文用于记录在微信中开发页面时所遇到的坑。</p>","title":"微信网页开发踩坑记录","comments":true,"link":"","path":"/post/troubles-with-web-developing-in-weixin"},{"id":"use-summary-of-next-js-and-graphql","excerpt":"<p>近段时间里使用 <a href=\"https://github.com/zeit/next.js\">Next.js</a> 搭建了两个后台，同时还使用了 GraphQL。期间匆匆忙忙，而且项目都是另一个前端老哥搭建的。所以，自己又抽空从头开始搭建了几个 demo，回顾一下知识，同时整理了一下当时遇见的问题、梳理下其中缘由。</p>\n<p>本文主要内容包括三个 demo 的介绍，并记录一些在开发过程中遇到的问题和解决，本文对应 Next.js 版本为 <del>v8.0.3</del>。写的时候发现 Next.js 升级到 v9.0.0 了，自带 TypeScript 支持了，果断把 demo 的版本也升级了。</p>\n<p>上一篇文章（《<a href=\"/post/get-a-ssr-demo-step-by-step/index.html\" title=\"从零搭建 SSR\">从零搭建 SSR</a>》）介绍了从零搭建 SSR 的过程，并且附带了一些问题的讲解，推荐结合阅读。</p>\n<p>那么，按照惯例就先呈上 demo 地址：<a href=\"https://github.com/daief/react-ssr\">react-ssr</a>。</p>","title":"Next.js、GraphQL 使用小结","comments":true,"link":"","path":"/post/use-summary-of-next-js-and-graphql"},{"id":"get-a-ssr-demo-step-by-step","excerpt":"<p>在上一季度中接触并使用了 Next.js，实践了一把 SSR。期间遇见了不少问题，详情可见：<a href=\"/post/use-summary-of-next-js-and-graphql/index.html\" title=\"Next.js、GraphQL 使用小结\">Next.js、GraphQL 使用小结</a>。</p>\n<p>实际上是打算先写那篇文章，但这里还是来写这个了，这样能先从零开始认识 SSR。</p>\n<p>先放上 demo 地址：<a href=\"https://github.com/daief/react-ssr/tree/master/packages/express-ssr-demo\">https://github.com/daief/react-ssr/tree/master/packages/express-ssr-demo</a>。</p>","title":"从零搭建 SSR","comments":true,"link":"","path":"/post/get-a-ssr-demo-step-by-step"},{"id":"getting-started-with-docker","excerpt":"<p>本文是学习 Docker 时的初学者记录，内容是关于 Docker 基本命令的使用。如果您对此已经熟悉，大可略过本文。</p>","title":"Docker 入门笔记","comments":true,"link":"","path":"/post/getting-started-with-docker"},{"id":"happy-vue-with-typescript","excerpt":"<p>本文不说明 webpack 的配置，简单介绍如何使用 TypeScript 来书写 Vue，阅读本文应同时对 TypeScript 和 Vue 有一定的了解。</p>","title":"用 TypeScript 来写 Vue！","comments":true,"link":"","path":"/post/happy-vue-with-typescript"},{"id":"the-first-time-i-learn-ast","excerpt":"<blockquote>\n<p>在计算机科学中，抽象语法树（Abstract Syntax Tree，AST），或简称语法树（Syntax tree），是源代码语法结构的一种抽象表示。它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源代码中的一种结构。</p>\n</blockquote>\n<p>Babel、UglifyJS2、ESLint、Webpack、TypeScript 等我们熟知的工具都包含 AST 的应用，实现了强大的功能。本文主要记录学习、应用 AST 的过程，主要内容：1. 解读 <a href=\"https://github.com/gaearon/react-hot-loader/blob/master/src/babel.dev.js\">react-hot-loader dev 环境下的 Babel 插件</a>；2. 编写对应的 TypeScript transformer 尽可能实现相同的功能。</p>","title":"初识 AST","comments":true,"link":"","path":"/post/the-first-time-i-learn-ast"}],"total":5,"current":2,"prev":1,"prev_link":"/page/1/","next":3,"next_link":"/page/3/"}}
